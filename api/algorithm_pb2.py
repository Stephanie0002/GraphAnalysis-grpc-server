# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: algorithm.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x61lgorithm.proto\x12\talgorithm\"i\n\rReplayRequest\x12\x14\n\x0c\x64\x61taset_name\x18\x01 \x01(\t\x12\x12\n\ntopic_name\x18\x02 \x01(\t\x12\x17\n\x0fstart_timestamp\x18\x03 \x01(\x03\x12\x15\n\rend_timestamp\x18\x04 \x01(\x03\"\xa3\x01\n\x10\x41lgorithmRequest\x12\x14\n\x0c\x61lgorithm_id\x18\x01 \x01(\x03\x12\x37\n\x06kwargs\x18\x02 \x03(\x0b\x32\'.algorithm.AlgorithmRequest.KwargsEntry\x12\x11\n\tuse_cache\x18\x03 \x01(\x08\x1a-\n\x0bKwargsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"1\n\x0bReplayReply\x12\x0e\n\x06result\x18\x01 \x01(\t\x12\x12\n\nerror_info\x18\x02 \x01(\t\"f\n\x0e\x41lgorithmReply\x12\r\n\x05state\x18\x01 \x01(\t\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\x0e\n\x06\x61pp_id\x18\x03 \x01(\t\x12\x11\n\thdfs_path\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\"#\n\x11SparkQueryRequest\x12\x0e\n\x06\x61pp_id\x18\x01 \x01(\t\"5\n\x0fSparkQueryReply\x12\r\n\x05state\x18\x01 \x01(\t\x12\x13\n\x0b\x66inalStatus\x18\x02 \x01(\t2\xa8\x01\n\tAlgorithm\x12L\n\x10\x45xecuteAlgorithm\x12\x1b.algorithm.AlgorithmRequest\x1a\x19.algorithm.AlgorithmReply\"\x00\x12M\n\x0fSparkQueryState\x12\x1c.algorithm.SparkQueryRequest\x1a\x1a.algorithm.SparkQueryReply\"\x00\x32\x46\n\x08\x44\x61taPipe\x12:\n\x06Replay\x12\x18.algorithm.ReplayRequest\x1a\x16.algorithm.ReplayReplyb\x06proto3')



_REPLAYREQUEST = DESCRIPTOR.message_types_by_name['ReplayRequest']
_ALGORITHMREQUEST = DESCRIPTOR.message_types_by_name['AlgorithmRequest']
_ALGORITHMREQUEST_KWARGSENTRY = _ALGORITHMREQUEST.nested_types_by_name['KwargsEntry']
_REPLAYREPLY = DESCRIPTOR.message_types_by_name['ReplayReply']
_ALGORITHMREPLY = DESCRIPTOR.message_types_by_name['AlgorithmReply']
_SPARKQUERYREQUEST = DESCRIPTOR.message_types_by_name['SparkQueryRequest']
_SPARKQUERYREPLY = DESCRIPTOR.message_types_by_name['SparkQueryReply']
ReplayRequest = _reflection.GeneratedProtocolMessageType('ReplayRequest', (_message.Message,), {
  'DESCRIPTOR' : _REPLAYREQUEST,
  '__module__' : 'algorithm_pb2'
  # @@protoc_insertion_point(class_scope:algorithm.ReplayRequest)
  })
_sym_db.RegisterMessage(ReplayRequest)

AlgorithmRequest = _reflection.GeneratedProtocolMessageType('AlgorithmRequest', (_message.Message,), {

  'KwargsEntry' : _reflection.GeneratedProtocolMessageType('KwargsEntry', (_message.Message,), {
    'DESCRIPTOR' : _ALGORITHMREQUEST_KWARGSENTRY,
    '__module__' : 'algorithm_pb2'
    # @@protoc_insertion_point(class_scope:algorithm.AlgorithmRequest.KwargsEntry)
    })
  ,
  'DESCRIPTOR' : _ALGORITHMREQUEST,
  '__module__' : 'algorithm_pb2'
  # @@protoc_insertion_point(class_scope:algorithm.AlgorithmRequest)
  })
_sym_db.RegisterMessage(AlgorithmRequest)
_sym_db.RegisterMessage(AlgorithmRequest.KwargsEntry)

ReplayReply = _reflection.GeneratedProtocolMessageType('ReplayReply', (_message.Message,), {
  'DESCRIPTOR' : _REPLAYREPLY,
  '__module__' : 'algorithm_pb2'
  # @@protoc_insertion_point(class_scope:algorithm.ReplayReply)
  })
_sym_db.RegisterMessage(ReplayReply)

AlgorithmReply = _reflection.GeneratedProtocolMessageType('AlgorithmReply', (_message.Message,), {
  'DESCRIPTOR' : _ALGORITHMREPLY,
  '__module__' : 'algorithm_pb2'
  # @@protoc_insertion_point(class_scope:algorithm.AlgorithmReply)
  })
_sym_db.RegisterMessage(AlgorithmReply)

SparkQueryRequest = _reflection.GeneratedProtocolMessageType('SparkQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _SPARKQUERYREQUEST,
  '__module__' : 'algorithm_pb2'
  # @@protoc_insertion_point(class_scope:algorithm.SparkQueryRequest)
  })
_sym_db.RegisterMessage(SparkQueryRequest)

SparkQueryReply = _reflection.GeneratedProtocolMessageType('SparkQueryReply', (_message.Message,), {
  'DESCRIPTOR' : _SPARKQUERYREPLY,
  '__module__' : 'algorithm_pb2'
  # @@protoc_insertion_point(class_scope:algorithm.SparkQueryReply)
  })
_sym_db.RegisterMessage(SparkQueryReply)

_ALGORITHM = DESCRIPTOR.services_by_name['Algorithm']
_DATAPIPE = DESCRIPTOR.services_by_name['DataPipe']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ALGORITHMREQUEST_KWARGSENTRY._options = None
  _ALGORITHMREQUEST_KWARGSENTRY._serialized_options = b'8\001'
  _REPLAYREQUEST._serialized_start=30
  _REPLAYREQUEST._serialized_end=135
  _ALGORITHMREQUEST._serialized_start=138
  _ALGORITHMREQUEST._serialized_end=301
  _ALGORITHMREQUEST_KWARGSENTRY._serialized_start=256
  _ALGORITHMREQUEST_KWARGSENTRY._serialized_end=301
  _REPLAYREPLY._serialized_start=303
  _REPLAYREPLY._serialized_end=352
  _ALGORITHMREPLY._serialized_start=354
  _ALGORITHMREPLY._serialized_end=456
  _SPARKQUERYREQUEST._serialized_start=458
  _SPARKQUERYREQUEST._serialized_end=493
  _SPARKQUERYREPLY._serialized_start=495
  _SPARKQUERYREPLY._serialized_end=548
  _ALGORITHM._serialized_start=551
  _ALGORITHM._serialized_end=719
  _DATAPIPE._serialized_start=721
  _DATAPIPE._serialized_end=791
# @@protoc_insertion_point(module_scope)
